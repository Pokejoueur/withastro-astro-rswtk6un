---
---

<div x-data="{ open: false, query: '', results: [] }" class="relative w-full">
  <div class="relative">
    <input 
      x-model="query"
      x-on:focus="open = true"
      x-on:keydown.escape="open = false"
      type="text" 
      placeholder="Search pages..." 
      class="w-full bg-neutral-100 dark:bg-neutral-800 rounded-md py-2 pl-10 pr-4 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500 dark:focus:ring-primary-400 transition-colors"
    />
    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-neutral-500">
        <circle cx="11" cy="11" r="8"></circle>
        <line x1="21" y1="21" x2="16.65" y2="16.65"></line>
      </svg>
    </div>
  </div>
  
  <!-- Search Results -->
  <div 
    x-show="open && query.length >= 2" 
    x-on:click.away="open = false"
    class="absolute z-50 top-full left-0 right-0 mt-2 bg-white dark:bg-neutral-800 border border-neutral-200 dark:border-neutral-700 rounded-md shadow-lg max-h-80 overflow-y-auto"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 translate-y-2"
    x-transition:enter-end="opacity-100 translate-y-0"
  >
    <template x-if="results.length === 0 && query.length >= 2">
      <div class="px-4 py-3 text-sm text-neutral-500">
        No results found for "<span x-text="query"></span>"
      </div>
    </template>
    
    <template x-for="result in results" :key="result.url">
      <a :href="result.url" class="block px-4 py-3 hover:bg-neutral-100 dark:hover:bg-neutral-700 border-b border-neutral-200 dark:border-neutral-700 last:border-0">
        <div class="font-medium" x-text="result.title"></div>
        <div class="text-sm text-neutral-500 dark:text-neutral-400 line-clamp-1" x-text="result.description"></div>
      </a>
    </template>
  </div>
</div>

<script>
  document.addEventListener('alpine:init', () => {
    // Mock search functionality - in a real app, this would connect to a search API
    const searchIndex = [
      {
        title: "Main Baseplate",
        description: "The primary baseplate that serves as the foundation of the game.",
        url: "/main-baseplate"
      },
      {
        title: "Points",
        description: "The primary currency in the game used for purchasing upgrades.",
        url: "/points"
      },
      {
        title: "Prestige Points",
        description: "Higher tier currency earned when resetting your progress.",
        url: "/prestige-points"
      },
      {
        title: "Mining",
        description: "A gameplay mechanic to extract resources from different areas.",
        url: "/mining"
      },
      // More entries would be added here in a real implementation
    ];

    Alpine.data('search', () => ({
      open: false,
      query: '',
      results: [],
      
      search() {
        if (this.query.length < 2) {
          this.results = [];
          return;
        }
        
        const searchTerm = this.query.toLowerCase();
        this.results = searchIndex.filter(item => {
          return item.title.toLowerCase().includes(searchTerm) || 
                 item.description.toLowerCase().includes(searchTerm);
        }).slice(0, 5); // Limit to 5 results
      },
      
      init() {
        this.$watch('query', () => this.search());
      }
    }));
  });
</script>